name: Auto Update Gallery

on:
  # 当有文件推送到 main 分支时触发
  push:
    branches: [ main ]
    paths:
      - 'public/uploads/**'
  
  # 允许手动触发
  workflow_dispatch:

# 权限设置
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  update-gallery:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install chokidar for file watching
      run: npm install chokidar --save-dev
    
    - name: Check for new images
      id: check_images
      run: |
        echo "Checking for images in public/uploads/2025/08..."
        if [ -d "public/uploads/2025/08" ]; then
          IMAGE_COUNT=$(find public/uploads/2025/08 -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" -o -iname "*.webp" \) | wc -l)
          echo "Found $IMAGE_COUNT images"
          echo "image_count=$IMAGE_COUNT" >> $GITHUB_OUTPUT
          
          if [ $IMAGE_COUNT -gt 0 ]; then
            echo "has_images=true" >> $GITHUB_OUTPUT
          else
            echo "has_images=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "Images directory not found"
          echo "has_images=false" >> $GITHUB_OUTPUT
          echo "image_count=0" >> $GITHUB_OUTPUT
        fi
    
    - name: Run gallery update script
      if: steps.check_images.outputs.has_images == 'true'
      run: |
        echo "Running gallery update script..."
        node scripts/update-gallery.js
        
        # 检查是否有文件更改
        if git diff --quiet src/store/gallery-store.tsx; then
          echo "No changes detected in gallery-store.tsx"
          echo "update_needed=false" >> $GITHUB_ENV
        else
          echo "Changes detected in gallery-store.tsx"
          echo "update_needed=true" >> $GITHUB_ENV
        fi
    
    - name: Commit updated gallery store
      if: env.update_needed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 添加更改的文件
        git add src/store/gallery-store.tsx
        git add logs/ || true  # 添加日志文件（如果存在）
        
        # 创建提交信息
        COMMIT_MSG="feat: 自动更新图片库 (${{ steps.check_images.outputs.image_count }} 张图片)

        - 自动扫描并更新 public/uploads/2025/08 目录
        - 更新 gallery-store.tsx 中的图片列表
        - 更新时间: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
        - 触发方式: GitHub Actions 自动化流程
        
        [自动提交]"
        
        git commit -m "$COMMIT_MSG"
        
        echo "Changes committed successfully"
    
    - name: Push changes
      if: env.update_needed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
    
    - name: Build project
      run: npm run build
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        enablement: true
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Generate deployment summary
      run: |
        echo "## 🚀 部署完成" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **图片数量**: ${{ steps.check_images.outputs.image_count }} 张" >> $GITHUB_STEP_SUMMARY
        echo "- **更新状态**: ${{ env.update_needed == 'true' && '✅ 已更新' || '⏭️ 无需更新' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **部署 URL**: https://xiangyingchang.github.io/picture-gallery/" >> $GITHUB_STEP_SUMMARY
        echo "- **部署时间**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 处理日志" >> $GITHUB_STEP_SUMMARY
        if [ -f "logs/gallery-update.log" ]; then
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -20 logs/gallery-update.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          echo "无日志文件生成" >> $GITHUB_STEP_SUMMARY
        fi